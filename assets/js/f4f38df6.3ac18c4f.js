"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1776],{2792:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>f,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=t(4848),r=t(8453);const s={},f=void 0,o={id:"README/Ghidriff vs Bindiff",title:"Ghidriff vs Bindiff",description:"ghidriff vs bindiff",source:"@site/docs/README/Ghidriff vs Bindiff.md",sourceDirName:"README",slug:"/README/Ghidriff vs Bindiff",permalink:"/ghidriff/docs/README/Ghidriff vs Bindiff",draft:!1,unlisted:!1,editUrl:"https://github.com/clearbluejar/ghidriff/tree/main/www/docs/docs/README/Ghidriff vs Bindiff.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use Cases",permalink:"/ghidriff/docs/README/Use Cases"},next:{title:"Supported Platforms",permalink:"/ghidriff/docs/README/Supported Platforms"}},d={},c=[];function a(e){const i={a:"a",blockquote:"blockquote",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://twitter.com/clearbluejar/status/1712093656708976868",children:(0,n.jsx)(i.img,{alt:"ghidriff vs bindiff",src:t(508).A+"",width:"665",height:"860"})})}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["\ud83d\ude06 In all seriousness, #bindiff is amazing. I use it alongside #ghidriff for really complicated diffs. (ie bindiff matching > ghidriff matching).  Currently, I see ghidriff offering an edge for automation (via command-line diffing) and output (markdown). As the tools are both now open source, it will be fun to see how they evolve for the benefit of the community.  - ",(0,n.jsx)(i.a,{href:"https://twitter.com/clearbluejar/status/1712095731924779370",children:"Tweet"})]}),"\n"]})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},508:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/ghidriff-v-bindiff-fe7346c79dd4cadcdece3a10ce288209.png"},8453:(e,i,t)=>{t.d(i,{R:()=>f,x:()=>o});var n=t(6540);const r={},s=n.createContext(r);function f(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:f(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);