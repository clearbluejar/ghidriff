"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[468],{342:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=i(5893),r=i(1151);const o={sidebar_position:2},s=void 0,a={id:"README/Engine",title:"Engine",description:'An "engine" is a self-contained, but externally-controllable, piece of code that encapsulates powerful logic designed to perform a specific type of work.',source:"@site/docs/README/Engine.md",sourceDirName:"README",slug:"/README/Engine",permalink:"/ghidriff/docs/README/Engine",draft:!1,unlisted:!1,editUrl:"https://github.com/clearbluejar/ghidriff/tree/main/www/docs/docs/README/Engine.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"High Level",permalink:"/ghidriff/docs/README/High Level"},next:{title:"Extending ghidriff",permalink:"/ghidriff/docs/README/Extending ghidriff"}},c={},l=[];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{align:"center",children:["\n",(0,t.jsx)(n.img,{src:"https://user-images.githubusercontent.com/3752074/229976340-96394970-152f-4d88-9fe4-a46589b31c50.png",height:"300"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'An "engine" is a self-contained, but externally-controllable, piece of code that encapsulates powerful logic designed to perform a specific type of work.'}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ghidriff"})," provides a core base class ",(0,t.jsx)(n.a,{href:"https://github.com/clearbluejar/ghidriff/ghidriff/ghidra_diff_engine.py",children:"GhidraDiffEngine"})," that can be extended to create your own binary diffing ",(0,t.jsx)(n.a,{href:"#implementations",children:"implementations"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The base class implements the first 3 steps of the Ghidra ",(0,t.jsx)(n.a,{href:"https://github.com/clearbluejar/ghidra-python-vscode-devcontainer-skeleton#steps",children:"headless workflow"}),":"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create Ghidra Project"})," - Directory and collection of Ghidra project files and data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Import Binary to project"})," - Import one or more binaries to the project for analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Analyze Binary"})," - Ghidra will perform default binary analysis on each binary"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The base class provides the abstract method ",(0,t.jsx)(n.a,{href:"https://github.com/clearbluejar/ghidriff/ghidriff/ghidra_diff_engine.py",children:"find_matches"})," where the actual diffing (function matching) takes place."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var t=i(7294);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);